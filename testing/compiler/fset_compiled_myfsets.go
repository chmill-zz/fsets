// Code generated by fsetcodegen; DO NOT EDIT.
package compiler

import (
	"context"
	"github.com/gostdlib/base/retry/exponential"
	"github.com/johnsiilver/fsets"
)

// MyFsetsCompiled is a statically compiled version of the fset pipeline.
func MyFsetsCompiled(ctx context.Context, so fsets.StateObject[Args]) fsets.StateObject[Args] {
	var err error
	if ctx == nil {
		ctx = context.Background()
	}
	so.SetCtx(ctx)
	if back != nil {
		err := back.Retry(
			ctx,
			func(ctx context.Context, rec exponential.Record) error {
				var err error
				so, err = Fa(so)
				return err
			},
		)
		if err != nil || so.GetStop() {
			so.SetErr(err)
			return so
		}
	} else {
		so, err = Fa(so)
		if err != nil || so.GetStop() {
			so.SetErr(err)
			return so
		}
	}
	so, err = Fb(so)
	if err != nil || so.GetStop() {
		so.SetErr(err)
		return so
	}
	so, err = Fc(so)
	if err != nil || so.GetStop() {
		so.SetErr(err)
		return so
	}
	return so
}
